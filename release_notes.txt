New in 1.8.0
    Added more flexible events processing approach using Guava's EventBus
    Many minor code improvements
    Minor fixes for performance test
    Now uses Spring 3.2.6
    Added `HierarchicalInfileObjectLoader#setIgnoredClasses`; deprecated `HierarchicalInfileObjectLoader#setClassesToIgnore`

New in 1.7.11
    Added greater precision when persisting float values

New in 1.7.10
    Added support for persisting entities with @EmbeddedId

New in 1.7.9
    FIXED issue where always starting the auto-generated id at 0 would cause problems when persisting into a non-empty table

New in 1.7.8
    FIXED issue where the InfileDataBuffer would not escape all necessary characters in append(String)

New in 1.7.7
    FIXED issue where the InfileDataBuffer would process rows with an empty buffer

New in 1.7.6
    Release skipped.

New in 1.7.5
    Moves under the opower-parent umbrella of open source projects

New in 1.7.4
    Allow input rows to replace existing rows for rows that have the same value for a primary key or unique index as an existing row.

New in 1.7.3
    FIXED issue where the @Enumerated annotation was not being used and Object.toString() was being used instead of Enum.name(). Before, all enum values were appended with Object.toString(), but with this fix ordinal is used for all cases but when @Enumerated(EnumType.STRING) is specified.
    FIXED issue with finding methods that are annotated with @Column. Now if a parent class has the same method name but different return type, it will not incorrectly include that as a method that has an @Column annotation.
    FIXED issue with not including the columns of @Embedded fields.

New in 1.7.2
    FIXED issue where persisted fields of type java.util.Date were losing or gaining granularity. The javax.persistence.Temporal annotation is required for all persisted fields of type java.util.Date.
